openapi: "3.0.3"

servers:
  - url: "http://articles-platform-api/"

info:
  title: "Symfony 6 Articles platform RESTful API"
  description: |-
    Develop a web-based application for citizens and lawyers.  The application is an online registry for citizens who want to make appointments with lawyers
  version: "2.0.0"

externalDocs:
  description: |-
    Find Symfony documentation here
  url: "https://symfony.com/doc/current/index.html"

tags:
  - name: "check"
    description: "Check endpoints"

paths:
  # Check
  '/{index}':
    get:
      tags:
        - "check"
      parameters:
        - name: index
          description: |-
            Test index page
          in: path
          required: true
          example:
          schema:
            type: string

      summary: |-
        Forbidden index page
      responses:
        "404":
          description: "Successful response. Page not found"

  '/api/healthcheck':
    get:
      tags:
        - "check"
      summary: |-
        Checks if the application is accessable
      responses:
        "204":
          description: "Successful response. No content"

        "500":
          description: "Server Error"

  '/api/register':
    post:
      tags:
        - "register"
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Basic YXNpZG9yb3Y3Mjp0T3NIaWs=
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      summary: |-
        Register a new user.
      requestBody:
        description: |-
          JSON string posted from the Drop-in form
        content:
          "application/json":
            schema:
              type: object
              example:
                {
                  "action": "register",
                  "data": {
                    "email": "<encrypted.email>",
                    "roles": [
                      "ROLE_USER",
                      "ROLE_READER"
                    ],
                    "password": "<encrypted.password>",
                  }
                }
      responses:
        "200":
          description: |-
            Register a new user.
          content:
            application/json:
              examples:
                success:
                  value: {
                    "status": "success",
                    "code": 200,
                    "response": {
                      "hashedEmail": "<encrypted.email>",
                    },
                    "message": "New user was registered successfully."
                  }
        "401":
          description: "Unauthorized. Basic authorization token is missing or invalid"
          content:
            application/json:
              examples:
                exception:
                  value: {
                    "status": "error",
                    "code": 401,
                    "message": "Not authorized."
                  }
        "400":
          description: "Exception was thrown. Bad request"
          content:
            application/json:
              examples:
                exception:
                  value: {
                    "status": "error",
                    "code": 400,
                    "message": "Bad request."
                  }
